services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: perennial_db
    environment:
      POSTGRES_DB: assessment
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - perennial_network

  # FastAPI Application
  app:
    build: .
    container_name: perennial_app
    environment:
      # Database Configuration
      DATABASE_URL: postgresql://postgres:postgres@db:5432/assessment

      # Rate Limiting Configuration
      RATE_LIMIT_REQUESTS: 5
      RATE_LIMIT_WINDOW: 60

      # Logging Configuration
      LOG_LEVEL: INFO

      # Application Configuration
      ENVIRONMENT: production
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./app:/app/app:ro  # Mount for development (optional)
    networks:
      - perennial_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:

networks:
  perennial_network:
    driver: bridge
